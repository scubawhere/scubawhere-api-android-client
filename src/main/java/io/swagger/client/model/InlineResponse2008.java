/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class InlineResponse2008  {
  
  @SerializedName("status")
  private String status = null;
  @SerializedName("decimal_price")
  private String decimalPrice = null;
  @SerializedName("accommodation_decimal_price")
  private String accommodationDecimalPrice = null;
  @SerializedName("packageafacde_id")
  private Long packageafacdeId = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDecimalPrice() {
    return decimalPrice;
  }
  public void setDecimalPrice(String decimalPrice) {
    this.decimalPrice = decimalPrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getAccommodationDecimalPrice() {
    return accommodationDecimalPrice;
  }
  public void setAccommodationDecimalPrice(String accommodationDecimalPrice) {
    this.accommodationDecimalPrice = accommodationDecimalPrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getPackageafacdeId() {
    return packageafacdeId;
  }
  public void setPackageafacdeId(Long packageafacdeId) {
    this.packageafacdeId = packageafacdeId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2008 inlineResponse2008 = (InlineResponse2008) o;
    return (status == null ? inlineResponse2008.status == null : status.equals(inlineResponse2008.status)) &&
        (decimalPrice == null ? inlineResponse2008.decimalPrice == null : decimalPrice.equals(inlineResponse2008.decimalPrice)) &&
        (accommodationDecimalPrice == null ? inlineResponse2008.accommodationDecimalPrice == null : accommodationDecimalPrice.equals(inlineResponse2008.accommodationDecimalPrice)) &&
        (packageafacdeId == null ? inlineResponse2008.packageafacdeId == null : packageafacdeId.equals(inlineResponse2008.packageafacdeId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (status == null ? 0: status.hashCode());
    result = 31 * result + (decimalPrice == null ? 0: decimalPrice.hashCode());
    result = 31 * result + (accommodationDecimalPrice == null ? 0: accommodationDecimalPrice.hashCode());
    result = 31 * result + (packageafacdeId == null ? 0: packageafacdeId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2008 {\n");
    
    sb.append("  status: ").append(status).append("\n");
    sb.append("  decimalPrice: ").append(decimalPrice).append("\n");
    sb.append("  accommodationDecimalPrice: ").append(accommodationDecimalPrice).append("\n");
    sb.append("  packageafacdeId: ").append(packageafacdeId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
