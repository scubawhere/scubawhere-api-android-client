/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.Country;
import java.util.Date;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class Customer  {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("email")
  private String email = null;
  @SerializedName("firstname")
  private String firstname = null;
  @SerializedName("lastname")
  private String lastname = null;
  @SerializedName("verified")
  private Integer verified = null;
  @SerializedName("birthday")
  private Date birthday = null;
  @SerializedName("gender")
  private Integer gender = null;
  @SerializedName("address_1")
  private String address1 = null;
  @SerializedName("address_2")
  private String address2 = null;
  @SerializedName("city")
  private String city = null;
  @SerializedName("county")
  private String county = null;
  @SerializedName("postcode")
  private String postcode = null;
  @SerializedName("country_id")
  private Long countryId = null;
  @SerializedName("phone")
  private String phone = null;
  @SerializedName("last_dive")
  private Date lastDive = null;
  @SerializedName("number_of_dives")
  private Integer numberOfDives = null;
  @SerializedName("chest_size")
  private String chestSize = null;
  @SerializedName("shoe_size")
  private String shoeSize = null;
  @SerializedName("height")
  private String height = null;
  @SerializedName("cylinder_size")
  private String cylinderSize = null;
  @SerializedName("notes")
  private String notes = null;
  @SerializedName("unsubscribed")
  private Boolean unsubscribed = null;
  @SerializedName("country")
  private Country country = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getFirstname() {
    return firstname;
  }
  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLastname() {
    return lastname;
  }
  public void setLastname(String lastname) {
    this.lastname = lastname;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getVerified() {
    return verified;
  }
  public void setVerified(Integer verified) {
    this.verified = verified;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getBirthday() {
    return birthday;
  }
  public void setBirthday(Date birthday) {
    this.birthday = birthday;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getGender() {
    return gender;
  }
  public void setGender(Integer gender) {
    this.gender = gender;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getAddress1() {
    return address1;
  }
  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getAddress2() {
    return address2;
  }
  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCity() {
    return city;
  }
  public void setCity(String city) {
    this.city = city;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCounty() {
    return county;
  }
  public void setCounty(String county) {
    this.county = county;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPostcode() {
    return postcode;
  }
  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getCountryId() {
    return countryId;
  }
  public void setCountryId(Long countryId) {
    this.countryId = countryId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPhone() {
    return phone;
  }
  public void setPhone(String phone) {
    this.phone = phone;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getLastDive() {
    return lastDive;
  }
  public void setLastDive(Date lastDive) {
    this.lastDive = lastDive;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getNumberOfDives() {
    return numberOfDives;
  }
  public void setNumberOfDives(Integer numberOfDives) {
    this.numberOfDives = numberOfDives;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getChestSize() {
    return chestSize;
  }
  public void setChestSize(String chestSize) {
    this.chestSize = chestSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getShoeSize() {
    return shoeSize;
  }
  public void setShoeSize(String shoeSize) {
    this.shoeSize = shoeSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getHeight() {
    return height;
  }
  public void setHeight(String height) {
    this.height = height;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCylinderSize() {
    return cylinderSize;
  }
  public void setCylinderSize(String cylinderSize) {
    this.cylinderSize = cylinderSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getNotes() {
    return notes;
  }
  public void setNotes(String notes) {
    this.notes = notes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getUnsubscribed() {
    return unsubscribed;
  }
  public void setUnsubscribed(Boolean unsubscribed) {
    this.unsubscribed = unsubscribed;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Country getCountry() {
    return country;
  }
  public void setCountry(Country country) {
    this.country = country;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return (id == null ? customer.id == null : id.equals(customer.id)) &&
        (email == null ? customer.email == null : email.equals(customer.email)) &&
        (firstname == null ? customer.firstname == null : firstname.equals(customer.firstname)) &&
        (lastname == null ? customer.lastname == null : lastname.equals(customer.lastname)) &&
        (verified == null ? customer.verified == null : verified.equals(customer.verified)) &&
        (birthday == null ? customer.birthday == null : birthday.equals(customer.birthday)) &&
        (gender == null ? customer.gender == null : gender.equals(customer.gender)) &&
        (address1 == null ? customer.address1 == null : address1.equals(customer.address1)) &&
        (address2 == null ? customer.address2 == null : address2.equals(customer.address2)) &&
        (city == null ? customer.city == null : city.equals(customer.city)) &&
        (county == null ? customer.county == null : county.equals(customer.county)) &&
        (postcode == null ? customer.postcode == null : postcode.equals(customer.postcode)) &&
        (countryId == null ? customer.countryId == null : countryId.equals(customer.countryId)) &&
        (phone == null ? customer.phone == null : phone.equals(customer.phone)) &&
        (lastDive == null ? customer.lastDive == null : lastDive.equals(customer.lastDive)) &&
        (numberOfDives == null ? customer.numberOfDives == null : numberOfDives.equals(customer.numberOfDives)) &&
        (chestSize == null ? customer.chestSize == null : chestSize.equals(customer.chestSize)) &&
        (shoeSize == null ? customer.shoeSize == null : shoeSize.equals(customer.shoeSize)) &&
        (height == null ? customer.height == null : height.equals(customer.height)) &&
        (cylinderSize == null ? customer.cylinderSize == null : cylinderSize.equals(customer.cylinderSize)) &&
        (notes == null ? customer.notes == null : notes.equals(customer.notes)) &&
        (unsubscribed == null ? customer.unsubscribed == null : unsubscribed.equals(customer.unsubscribed)) &&
        (country == null ? customer.country == null : country.equals(customer.country));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (email == null ? 0: email.hashCode());
    result = 31 * result + (firstname == null ? 0: firstname.hashCode());
    result = 31 * result + (lastname == null ? 0: lastname.hashCode());
    result = 31 * result + (verified == null ? 0: verified.hashCode());
    result = 31 * result + (birthday == null ? 0: birthday.hashCode());
    result = 31 * result + (gender == null ? 0: gender.hashCode());
    result = 31 * result + (address1 == null ? 0: address1.hashCode());
    result = 31 * result + (address2 == null ? 0: address2.hashCode());
    result = 31 * result + (city == null ? 0: city.hashCode());
    result = 31 * result + (county == null ? 0: county.hashCode());
    result = 31 * result + (postcode == null ? 0: postcode.hashCode());
    result = 31 * result + (countryId == null ? 0: countryId.hashCode());
    result = 31 * result + (phone == null ? 0: phone.hashCode());
    result = 31 * result + (lastDive == null ? 0: lastDive.hashCode());
    result = 31 * result + (numberOfDives == null ? 0: numberOfDives.hashCode());
    result = 31 * result + (chestSize == null ? 0: chestSize.hashCode());
    result = 31 * result + (shoeSize == null ? 0: shoeSize.hashCode());
    result = 31 * result + (height == null ? 0: height.hashCode());
    result = 31 * result + (cylinderSize == null ? 0: cylinderSize.hashCode());
    result = 31 * result + (notes == null ? 0: notes.hashCode());
    result = 31 * result + (unsubscribed == null ? 0: unsubscribed.hashCode());
    result = 31 * result + (country == null ? 0: country.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  email: ").append(email).append("\n");
    sb.append("  firstname: ").append(firstname).append("\n");
    sb.append("  lastname: ").append(lastname).append("\n");
    sb.append("  verified: ").append(verified).append("\n");
    sb.append("  birthday: ").append(birthday).append("\n");
    sb.append("  gender: ").append(gender).append("\n");
    sb.append("  address1: ").append(address1).append("\n");
    sb.append("  address2: ").append(address2).append("\n");
    sb.append("  city: ").append(city).append("\n");
    sb.append("  county: ").append(county).append("\n");
    sb.append("  postcode: ").append(postcode).append("\n");
    sb.append("  countryId: ").append(countryId).append("\n");
    sb.append("  phone: ").append(phone).append("\n");
    sb.append("  lastDive: ").append(lastDive).append("\n");
    sb.append("  numberOfDives: ").append(numberOfDives).append("\n");
    sb.append("  chestSize: ").append(chestSize).append("\n");
    sb.append("  shoeSize: ").append(shoeSize).append("\n");
    sb.append("  height: ").append(height).append("\n");
    sb.append("  cylinderSize: ").append(cylinderSize).append("\n");
    sb.append("  notes: ").append(notes).append("\n");
    sb.append("  unsubscribed: ").append(unsubscribed).append("\n");
    sb.append("  country: ").append(country).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
