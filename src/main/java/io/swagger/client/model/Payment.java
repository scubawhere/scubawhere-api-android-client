/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.Currency;
import io.swagger.client.model.PaymentGateway;
import java.util.Date;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class Payment  {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("booking_id")
  private Long bookingId = null;
  @SerializedName("amount")
  private String amount = null;
  @SerializedName("currency_id")
  private Long currencyId = null;
  @SerializedName("payment_gateway_id")
  private Long paymentGatewayId = null;
  @SerializedName("received_at")
  private Date receivedAt = null;
  @SerializedName("payment_gateway")
  private PaymentGateway paymentGateway = null;
  @SerializedName("currency")
  private Currency currency = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getBookingId() {
    return bookingId;
  }
  public void setBookingId(Long bookingId) {
    this.bookingId = bookingId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getAmount() {
    return amount;
  }
  public void setAmount(String amount) {
    this.amount = amount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getCurrencyId() {
    return currencyId;
  }
  public void setCurrencyId(Long currencyId) {
    this.currencyId = currencyId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getPaymentGatewayId() {
    return paymentGatewayId;
  }
  public void setPaymentGatewayId(Long paymentGatewayId) {
    this.paymentGatewayId = paymentGatewayId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getReceivedAt() {
    return receivedAt;
  }
  public void setReceivedAt(Date receivedAt) {
    this.receivedAt = receivedAt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PaymentGateway getPaymentGateway() {
    return paymentGateway;
  }
  public void setPaymentGateway(PaymentGateway paymentGateway) {
    this.paymentGateway = paymentGateway;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Currency getCurrency() {
    return currency;
  }
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payment payment = (Payment) o;
    return (id == null ? payment.id == null : id.equals(payment.id)) &&
        (bookingId == null ? payment.bookingId == null : bookingId.equals(payment.bookingId)) &&
        (amount == null ? payment.amount == null : amount.equals(payment.amount)) &&
        (currencyId == null ? payment.currencyId == null : currencyId.equals(payment.currencyId)) &&
        (paymentGatewayId == null ? payment.paymentGatewayId == null : paymentGatewayId.equals(payment.paymentGatewayId)) &&
        (receivedAt == null ? payment.receivedAt == null : receivedAt.equals(payment.receivedAt)) &&
        (paymentGateway == null ? payment.paymentGateway == null : paymentGateway.equals(payment.paymentGateway)) &&
        (currency == null ? payment.currency == null : currency.equals(payment.currency));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (bookingId == null ? 0: bookingId.hashCode());
    result = 31 * result + (amount == null ? 0: amount.hashCode());
    result = 31 * result + (currencyId == null ? 0: currencyId.hashCode());
    result = 31 * result + (paymentGatewayId == null ? 0: paymentGatewayId.hashCode());
    result = 31 * result + (receivedAt == null ? 0: receivedAt.hashCode());
    result = 31 * result + (paymentGateway == null ? 0: paymentGateway.hashCode());
    result = 31 * result + (currency == null ? 0: currency.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payment {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  bookingId: ").append(bookingId).append("\n");
    sb.append("  amount: ").append(amount).append("\n");
    sb.append("  currencyId: ").append(currencyId).append("\n");
    sb.append("  paymentGatewayId: ").append(paymentGatewayId).append("\n");
    sb.append("  receivedAt: ").append(receivedAt).append("\n");
    sb.append("  paymentGateway: ").append(paymentGateway).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
