/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.util.Date;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class BasePrice  {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("owner_id")
  private Long ownerId = null;
  @SerializedName("owner_type")
  private String ownerType = null;
  @SerializedName("price")
  private Long price = null;
  @SerializedName("from")
  private Date from = null;
  @SerializedName("until")
  private Date until = null;
  @SerializedName("decimal_price")
  private Long decimalPrice = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getOwnerId() {
    return ownerId;
  }
  public void setOwnerId(Long ownerId) {
    this.ownerId = ownerId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOwnerType() {
    return ownerType;
  }
  public void setOwnerType(String ownerType) {
    this.ownerType = ownerType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getPrice() {
    return price;
  }
  public void setPrice(Long price) {
    this.price = price;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getFrom() {
    return from;
  }
  public void setFrom(Date from) {
    this.from = from;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getUntil() {
    return until;
  }
  public void setUntil(Date until) {
    this.until = until;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getDecimalPrice() {
    return decimalPrice;
  }
  public void setDecimalPrice(Long decimalPrice) {
    this.decimalPrice = decimalPrice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BasePrice basePrice = (BasePrice) o;
    return (id == null ? basePrice.id == null : id.equals(basePrice.id)) &&
        (ownerId == null ? basePrice.ownerId == null : ownerId.equals(basePrice.ownerId)) &&
        (ownerType == null ? basePrice.ownerType == null : ownerType.equals(basePrice.ownerType)) &&
        (price == null ? basePrice.price == null : price.equals(basePrice.price)) &&
        (from == null ? basePrice.from == null : from.equals(basePrice.from)) &&
        (until == null ? basePrice.until == null : until.equals(basePrice.until)) &&
        (decimalPrice == null ? basePrice.decimalPrice == null : decimalPrice.equals(basePrice.decimalPrice));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (ownerId == null ? 0: ownerId.hashCode());
    result = 31 * result + (ownerType == null ? 0: ownerType.hashCode());
    result = 31 * result + (price == null ? 0: price.hashCode());
    result = 31 * result + (from == null ? 0: from.hashCode());
    result = 31 * result + (until == null ? 0: until.hashCode());
    result = 31 * result + (decimalPrice == null ? 0: decimalPrice.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BasePrice {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  ownerId: ").append(ownerId).append("\n");
    sb.append("  ownerType: ").append(ownerType).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  from: ").append(from).append("\n");
    sb.append("  until: ").append(until).append("\n");
    sb.append("  decimalPrice: ").append(decimalPrice).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
