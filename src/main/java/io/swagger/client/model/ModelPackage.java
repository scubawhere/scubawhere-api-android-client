/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.Accommodation;
import io.swagger.client.model.Course;
import io.swagger.client.model.Ticket;
import java.util.*;
import java.util.Date;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class ModelPackage  {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("available_from")
  private Date availableFrom = null;
  @SerializedName("available_until")
  private Date availableUntil = null;
  @SerializedName("decimal_price")
  private String decimalPrice = null;
  @SerializedName("trips")
  private List<Ticket> trips = null;
  @SerializedName("courses")
  private List<Course> courses = null;
  @SerializedName("accommodations")
  private List<Accommodation> accommodations = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getAvailableFrom() {
    return availableFrom;
  }
  public void setAvailableFrom(Date availableFrom) {
    this.availableFrom = availableFrom;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getAvailableUntil() {
    return availableUntil;
  }
  public void setAvailableUntil(Date availableUntil) {
    this.availableUntil = availableUntil;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDecimalPrice() {
    return decimalPrice;
  }
  public void setDecimalPrice(String decimalPrice) {
    this.decimalPrice = decimalPrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Ticket> getTrips() {
    return trips;
  }
  public void setTrips(List<Ticket> trips) {
    this.trips = trips;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Course> getCourses() {
    return courses;
  }
  public void setCourses(List<Course> courses) {
    this.courses = courses;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Accommodation> getAccommodations() {
    return accommodations;
  }
  public void setAccommodations(List<Accommodation> accommodations) {
    this.accommodations = accommodations;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelPackage _package = (ModelPackage) o;
    return (id == null ? _package.id == null : id.equals(_package.id)) &&
        (name == null ? _package.name == null : name.equals(_package.name)) &&
        (description == null ? _package.description == null : description.equals(_package.description)) &&
        (availableFrom == null ? _package.availableFrom == null : availableFrom.equals(_package.availableFrom)) &&
        (availableUntil == null ? _package.availableUntil == null : availableUntil.equals(_package.availableUntil)) &&
        (decimalPrice == null ? _package.decimalPrice == null : decimalPrice.equals(_package.decimalPrice)) &&
        (trips == null ? _package.trips == null : trips.equals(_package.trips)) &&
        (courses == null ? _package.courses == null : courses.equals(_package.courses)) &&
        (accommodations == null ? _package.accommodations == null : accommodations.equals(_package.accommodations));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (description == null ? 0: description.hashCode());
    result = 31 * result + (availableFrom == null ? 0: availableFrom.hashCode());
    result = 31 * result + (availableUntil == null ? 0: availableUntil.hashCode());
    result = 31 * result + (decimalPrice == null ? 0: decimalPrice.hashCode());
    result = 31 * result + (trips == null ? 0: trips.hashCode());
    result = 31 * result + (courses == null ? 0: courses.hashCode());
    result = 31 * result + (accommodations == null ? 0: accommodations.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelPackage {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  availableFrom: ").append(availableFrom).append("\n");
    sb.append("  availableUntil: ").append(availableUntil).append("\n");
    sb.append("  decimalPrice: ").append(decimalPrice).append("\n");
    sb.append("  trips: ").append(trips).append("\n");
    sb.append("  courses: ").append(courses).append("\n");
    sb.append("  accommodations: ").append(accommodations).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
