/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.DateRange;
import io.swagger.client.model.ReportEntry;
import io.swagger.client.model.ReportEntryTotal;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class InlineResponse20040  {
  
  @SerializedName("daterange")
  private DateRange daterange = null;
  @SerializedName("accommodations")
  private ReportEntry accommodations = null;
  @SerializedName("accommodation_toal")
  private ReportEntryTotal accommodationToal = null;
  @SerializedName("addons")
  private ReportEntry addons = null;
  @SerializedName("addons_toal")
  private ReportEntryTotal addonsToal = null;
  @SerializedName("courses")
  private ReportEntry courses = null;
  @SerializedName("courses_toal")
  private ReportEntryTotal coursesToal = null;
  @SerializedName("fees")
  private ReportEntry fees = null;
  @SerializedName("fees_toal")
  private ReportEntryTotal feesToal = null;
  @SerializedName("packages")
  private ReportEntry packages = null;
  @SerializedName("package_toal")
  private ReportEntryTotal packageToal = null;
  @SerializedName("tickets")
  private ReportEntry tickets = null;
  @SerializedName("ticket_toal")
  private ReportEntryTotal ticketToal = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public DateRange getDaterange() {
    return daterange;
  }
  public void setDaterange(DateRange daterange) {
    this.daterange = daterange;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntry getAccommodations() {
    return accommodations;
  }
  public void setAccommodations(ReportEntry accommodations) {
    this.accommodations = accommodations;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntryTotal getAccommodationToal() {
    return accommodationToal;
  }
  public void setAccommodationToal(ReportEntryTotal accommodationToal) {
    this.accommodationToal = accommodationToal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntry getAddons() {
    return addons;
  }
  public void setAddons(ReportEntry addons) {
    this.addons = addons;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntryTotal getAddonsToal() {
    return addonsToal;
  }
  public void setAddonsToal(ReportEntryTotal addonsToal) {
    this.addonsToal = addonsToal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntry getCourses() {
    return courses;
  }
  public void setCourses(ReportEntry courses) {
    this.courses = courses;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntryTotal getCoursesToal() {
    return coursesToal;
  }
  public void setCoursesToal(ReportEntryTotal coursesToal) {
    this.coursesToal = coursesToal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntry getFees() {
    return fees;
  }
  public void setFees(ReportEntry fees) {
    this.fees = fees;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntryTotal getFeesToal() {
    return feesToal;
  }
  public void setFeesToal(ReportEntryTotal feesToal) {
    this.feesToal = feesToal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntry getPackages() {
    return packages;
  }
  public void setPackages(ReportEntry packages) {
    this.packages = packages;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntryTotal getPackageToal() {
    return packageToal;
  }
  public void setPackageToal(ReportEntryTotal packageToal) {
    this.packageToal = packageToal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntry getTickets() {
    return tickets;
  }
  public void setTickets(ReportEntry tickets) {
    this.tickets = tickets;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReportEntryTotal getTicketToal() {
    return ticketToal;
  }
  public void setTicketToal(ReportEntryTotal ticketToal) {
    this.ticketToal = ticketToal;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20040 inlineResponse20040 = (InlineResponse20040) o;
    return (daterange == null ? inlineResponse20040.daterange == null : daterange.equals(inlineResponse20040.daterange)) &&
        (accommodations == null ? inlineResponse20040.accommodations == null : accommodations.equals(inlineResponse20040.accommodations)) &&
        (accommodationToal == null ? inlineResponse20040.accommodationToal == null : accommodationToal.equals(inlineResponse20040.accommodationToal)) &&
        (addons == null ? inlineResponse20040.addons == null : addons.equals(inlineResponse20040.addons)) &&
        (addonsToal == null ? inlineResponse20040.addonsToal == null : addonsToal.equals(inlineResponse20040.addonsToal)) &&
        (courses == null ? inlineResponse20040.courses == null : courses.equals(inlineResponse20040.courses)) &&
        (coursesToal == null ? inlineResponse20040.coursesToal == null : coursesToal.equals(inlineResponse20040.coursesToal)) &&
        (fees == null ? inlineResponse20040.fees == null : fees.equals(inlineResponse20040.fees)) &&
        (feesToal == null ? inlineResponse20040.feesToal == null : feesToal.equals(inlineResponse20040.feesToal)) &&
        (packages == null ? inlineResponse20040.packages == null : packages.equals(inlineResponse20040.packages)) &&
        (packageToal == null ? inlineResponse20040.packageToal == null : packageToal.equals(inlineResponse20040.packageToal)) &&
        (tickets == null ? inlineResponse20040.tickets == null : tickets.equals(inlineResponse20040.tickets)) &&
        (ticketToal == null ? inlineResponse20040.ticketToal == null : ticketToal.equals(inlineResponse20040.ticketToal));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (daterange == null ? 0: daterange.hashCode());
    result = 31 * result + (accommodations == null ? 0: accommodations.hashCode());
    result = 31 * result + (accommodationToal == null ? 0: accommodationToal.hashCode());
    result = 31 * result + (addons == null ? 0: addons.hashCode());
    result = 31 * result + (addonsToal == null ? 0: addonsToal.hashCode());
    result = 31 * result + (courses == null ? 0: courses.hashCode());
    result = 31 * result + (coursesToal == null ? 0: coursesToal.hashCode());
    result = 31 * result + (fees == null ? 0: fees.hashCode());
    result = 31 * result + (feesToal == null ? 0: feesToal.hashCode());
    result = 31 * result + (packages == null ? 0: packages.hashCode());
    result = 31 * result + (packageToal == null ? 0: packageToal.hashCode());
    result = 31 * result + (tickets == null ? 0: tickets.hashCode());
    result = 31 * result + (ticketToal == null ? 0: ticketToal.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20040 {\n");
    
    sb.append("  daterange: ").append(daterange).append("\n");
    sb.append("  accommodations: ").append(accommodations).append("\n");
    sb.append("  accommodationToal: ").append(accommodationToal).append("\n");
    sb.append("  addons: ").append(addons).append("\n");
    sb.append("  addonsToal: ").append(addonsToal).append("\n");
    sb.append("  courses: ").append(courses).append("\n");
    sb.append("  coursesToal: ").append(coursesToal).append("\n");
    sb.append("  fees: ").append(fees).append("\n");
    sb.append("  feesToal: ").append(feesToal).append("\n");
    sb.append("  packages: ").append(packages).append("\n");
    sb.append("  packageToal: ").append(packageToal).append("\n");
    sb.append("  tickets: ").append(tickets).append("\n");
    sb.append("  ticketToal: ").append(ticketToal).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
