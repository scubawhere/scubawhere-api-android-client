/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.Boat;
import io.swagger.client.model.Trip;
import java.util.Date;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class Session  {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("trip")
  private Trip trip = null;
  @SerializedName("start")
  private Date start = null;
  @SerializedName("boat")
  private Boat boat = null;
  @SerializedName("timetable_id")
  private Long timetableId = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Trip getTrip() {
    return trip;
  }
  public void setTrip(Trip trip) {
    this.trip = trip;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getStart() {
    return start;
  }
  public void setStart(Date start) {
    this.start = start;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boat getBoat() {
    return boat;
  }
  public void setBoat(Boat boat) {
    this.boat = boat;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getTimetableId() {
    return timetableId;
  }
  public void setTimetableId(Long timetableId) {
    this.timetableId = timetableId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Session session = (Session) o;
    return (id == null ? session.id == null : id.equals(session.id)) &&
        (trip == null ? session.trip == null : trip.equals(session.trip)) &&
        (start == null ? session.start == null : start.equals(session.start)) &&
        (boat == null ? session.boat == null : boat.equals(session.boat)) &&
        (timetableId == null ? session.timetableId == null : timetableId.equals(session.timetableId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (trip == null ? 0: trip.hashCode());
    result = 31 * result + (start == null ? 0: start.hashCode());
    result = 31 * result + (boat == null ? 0: boat.hashCode());
    result = 31 * result + (timetableId == null ? 0: timetableId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Session {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  trip: ").append(trip).append("\n");
    sb.append("  start: ").append(start).append("\n");
    sb.append("  boat: ").append(boat).append("\n");
    sb.append("  timetableId: ").append(timetableId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
