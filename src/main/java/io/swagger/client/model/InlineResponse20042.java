/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.DateRange;
import io.swagger.client.model.InlineResponse20042Utilisation;
import io.swagger.client.model.InlineResponse20042UtilisationTotals;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class InlineResponse20042  {
  
  @SerializedName("daterange")
  private DateRange daterange = null;
  @SerializedName("utilisation")
  private InlineResponse20042Utilisation utilisation = null;
  @SerializedName("utilisation_totals")
  private InlineResponse20042UtilisationTotals utilisationTotals = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public DateRange getDaterange() {
    return daterange;
  }
  public void setDaterange(DateRange daterange) {
    this.daterange = daterange;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public InlineResponse20042Utilisation getUtilisation() {
    return utilisation;
  }
  public void setUtilisation(InlineResponse20042Utilisation utilisation) {
    this.utilisation = utilisation;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public InlineResponse20042UtilisationTotals getUtilisationTotals() {
    return utilisationTotals;
  }
  public void setUtilisationTotals(InlineResponse20042UtilisationTotals utilisationTotals) {
    this.utilisationTotals = utilisationTotals;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20042 inlineResponse20042 = (InlineResponse20042) o;
    return (daterange == null ? inlineResponse20042.daterange == null : daterange.equals(inlineResponse20042.daterange)) &&
        (utilisation == null ? inlineResponse20042.utilisation == null : utilisation.equals(inlineResponse20042.utilisation)) &&
        (utilisationTotals == null ? inlineResponse20042.utilisationTotals == null : utilisationTotals.equals(inlineResponse20042.utilisationTotals));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (daterange == null ? 0: daterange.hashCode());
    result = 31 * result + (utilisation == null ? 0: utilisation.hashCode());
    result = 31 * result + (utilisationTotals == null ? 0: utilisationTotals.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20042 {\n");
    
    sb.append("  daterange: ").append(daterange).append("\n");
    sb.append("  utilisation: ").append(utilisation).append("\n");
    sb.append("  utilisationTotals: ").append(utilisationTotals).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
